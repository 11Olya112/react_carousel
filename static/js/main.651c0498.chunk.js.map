{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","offset","setOffset","div","width","imgs","transform","transition","className","id","type","onClick","currentOffset","newOffset","Math","min","maxOffset","length","max","style","map","image","src","alt","App","state","handle","event","target","name","value","setState","this","htmlFor","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.651c0498.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images, itemWidth, frameSize, step, animationDuration, infinite,\n}) => {\n  const [offset, setOffset] = useState(0);\n\n  const div = {\n    width: frameSize * itemWidth,\n\n  };\n\n  const imgs = {\n    transform: `translateX(${offset}px)`,\n    transition: `${animationDuration}ms`,\n  };\n\n  const handleLeftArrow = () => {\n    setOffset((currentOffset) => {\n      const newOffset = currentOffset + itemWidth * step;\n\n      return Math.min(newOffset, 0);\n    });\n  };\n\n  const handleRightArrow = () => {\n    setOffset((currentOffset) => {\n      let newOffset = currentOffset - itemWidth * step;\n\n      const maxOffset = -(itemWidth * (images.length - step));\n\n      if (infinite && newOffset === -(itemWidth * (images.length))) {\n        newOffset = 0;\n\n        return newOffset;\n      }\n\n      return Math.max(newOffset, maxOffset);\n    });\n  };\n\n  return (\n    <div className=\"Carousel\" id=\"Carousel\">\n      <button type=\"button\" className=\"arrow\" onClick={handleLeftArrow}>\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"Next\"\n        className=\"arrow\"\n        onClick={handleRightArrow}\n      >\n        Next\n      </button>\n      <div id=\"viewport\" style={div}>\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li key={image} className=\"Carousel__item\">\n              <img src={image} width={itemWidth} style={imgs} alt=\"1\" />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'itemWidth':\n        this.setState({ [name]: +value });\n        break;\n\n      case 'frameSize':\n        this.setState({ [name]: +value });\n        break;\n\n      case 'step':\n        this.setState({ [name]: +value });\n        break;\n\n      case 'animationDuration':\n        this.setState({ [name]: +value });\n        break;\n\n      case 'infinite':\n        this.setState({ [name]: true });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration, infinite,\n    }\n      = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel width {images.length} images</h1>\n\n        <div className=\"content\">\n          <label htmlFor=\"itemWidth\">Please enter ItemWidth: </label>\n          <input\n            name=\"itemWidth\"\n            min={100}\n            max={200}\n            type=\"text\"\n            id=\"itemWidth\"\n            value={itemWidth}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"frameSize\">Please enter FrameSize: </label>\n          <input\n            name=\"frameSize\"\n            type=\"text\"\n            id=\"frameSize\"\n            value={frameSize}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"step\">Please enter step: </label>\n          <input\n            name=\"step\"\n            type=\"text\"\n            id=\"step\"\n            value={step}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"animationDuration\">\n            Please enter animationDuration:\n            {' '}\n          </label>\n          <input\n            name=\"animationDuration\"\n            type=\"text\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"animationDuration\">Infinite: </label>\n          <input\n            name=\"infinite\"\n            type=\"checkbox\"\n            id=\"infinite\"\n            onChange={this.handle}\n          />\n\n          <Carousel\n            images={images}\n            itemWidth={itemWidth}\n            frameSize={frameSize}\n            step={step}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}