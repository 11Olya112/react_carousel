{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","offset","setOffset","div","width","imgs","transform","transition","className","id","type","onClick","currentOffset","newOffset","length","Math","min","maxOffset","max","style","map","image","src","alt","App","state","this","htmlFor","value","onChange","event","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a294b839.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images, itemWidth, frameSize, step, animationDuration, infinite,\n}) => {\n  const [offset, setOffset] = useState(0);\n\n  const div = {\n    width: frameSize * itemWidth,\n\n  };\n\n  const imgs = {\n    transform: `translateX(${offset}px)`,\n    transition: `${animationDuration}ms`,\n  };\n\n  const handleLeftArrow = () => {\n    setOffset((currentOffset) => {\n      let newOffset = currentOffset + itemWidth * step;\n\n      if (infinite && newOffset === 0) {\n        newOffset = -(itemWidth * (images.length - 1));\n\n        return newOffset;\n      }\n\n      return Math.min(newOffset, 0);\n    });\n  };\n\n  const handleRightArrow = () => {\n    setOffset((currentOffset) => {\n      let newOffset = currentOffset - itemWidth * step;\n\n      const maxOffset = -(itemWidth * (images.length - 1));\n\n      if (infinite && newOffset === maxOffset) {\n        newOffset = 0;\n\n        return newOffset;\n      }\n\n      return Math.max(newOffset, maxOffset);\n    });\n  };\n\n  return (\n    <div className=\"Carousel\" id=\"Carousel\">\n      <button type=\"button\" className=\"arrow\" onClick={handleLeftArrow}>\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"Next\"\n        className=\"arrow\"\n        onClick={handleRightArrow}\n      >\n        Next\n      </button>\n      <div id=\"viewport\" style={div}>\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li key={image}>\n              <img src={image} width={itemWidth} style={imgs} alt=\"1\" />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration, infinite,\n    }\n      = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel width {images.length} images</h1>\r\n\n        <div className=\"content\">\n          <label htmlFor=\"itemWidth\">Please enter ItemWidth: </label>\n          <input\n            min={100}\n            max={200}\n            step={10}\n            type=\"text\"\n            id=\"itemWidth\"\n            value={itemWidth}\n            onChange={(event) => {\n              this.setState({ itemWidth: +event.target.value });\n            }}\n          />\n          <br />\n          <label htmlFor=\"frameSize\">Please enter FrameSize: </label>\n          <input\n            type=\"text\"\n            id=\"frameSize\"\n            value={frameSize}\n            onChange={(event) => {\n              this.setState({ frameSize: +event.target.value });\n            }}\n          />\n          <br />\n          <label htmlFor=\"step\">Please enter step: </label>\n          <input\n            type=\"text\"\n            id=\"step\"\n            value={step}\n            onChange={(event) => {\n              this.setState({ step: +event.target.value });\n            }}\n          />\n          <br />\n          <label htmlFor=\"animationDuration\">\n            Please enter animationDuration:\n            {' '}\n          </label>\n          <input\n            type=\"text\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={(event) => {\n              this.setState({ animationDuration: +event.target.value });\n            }}\n          />\n          <br />\n          <label htmlFor=\"animationDuration\">Infinite: </label>\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            onChange={() => {\n              this.setState({ infinite: true });\n            }}\n          />\n\n          <Carousel\n            images={images}\n            itemWidth={itemWidth}\n            frameSize={frameSize}\n            step={step}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}