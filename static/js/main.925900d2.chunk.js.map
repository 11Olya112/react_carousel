{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","offset","setOffset","isAbleToGoRight","setisAbleToGoRight","isAbleToGoLeft","setisAbleToGoLeft","div","width","imgs","transform","transition","className","id","type","onClick","currentOffset","newOffsets","Math","min","disabled","newOffset","maxOffset","length","max","style","map","image","src","alt","App","state","handle","event","target","name","value","setState","prevState","this","htmlFor","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.925900d2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [offset, setOffset] = useState(0);\n  const [isAbleToGoRight, setisAbleToGoRight] = useState(false);\n  const [isAbleToGoLeft, setisAbleToGoLeft] = useState(false);\n\n  const div = {\n    width: frameSize * itemWidth,\n  };\n\n  const imgs = {\n    transform: `translateX(${offset}px)`,\n    transition: `${animationDuration}ms`,\n  };\n\n  const handleLeftArrow = () => {\n    setisAbleToGoRight(false);\n\n    setOffset((currentOffset) => {\n      const newOffsets = currentOffset + itemWidth * step;\n\n      if (!infinite) {\n        setisAbleToGoLeft(newOffsets === 0);\n      }\n\n      return Math.min(newOffsets, 0);\n    });\n  };\n\n  const handleRightArrow = () => {\n    setisAbleToGoLeft(false);\n    setOffset((currentOffset) => {\n      let newOffset = currentOffset - itemWidth * step;\n\n      const maxOffset = -(itemWidth * (images.length - step));\n\n      if (infinite && newOffset === -(itemWidth * images.length)) {\n        newOffset = 0;\n\n        return newOffset;\n      }\n\n      if (!infinite) {\n        setisAbleToGoRight(maxOffset >= newOffset);\n      }\n\n      return Math.max(newOffset, maxOffset);\n    });\n  };\n\n  return (\n    <div className=\"Carousel\" id=\"Carousel\">\n      <button\n        type=\"button\"\n        className=\"arrow\"\n        onClick={handleLeftArrow}\n        disabled={isAbleToGoLeft}\n      >\n        Prev\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"Next\"\n        className=\"arrow\"\n        onClick={handleRightArrow}\n        disabled={isAbleToGoRight}\n      >\n        Next\n      </button>\n      <div id=\"viewport\" style={div} className=\"viewport\">\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li key={image} className=\"Carousel__item\">\n              <img src={image} width={itemWidth} style={imgs} alt=\"1\" />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel width {images.length} images</h1>\n\n        <div className=\"content\">\n          <label htmlFor=\"itemWidth\">Please enter ItemWidth: </label>\n          <input\n            className=\"input\"\n            name=\"itemWidth\"\n            min={100}\n            max={200}\n            type=\"number\"\n            id=\"itemWidth\"\n            value={itemWidth}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"frameSize\">Please enter FrameSize: </label>\n          <input\n            className=\"input\"\n            name=\"frameSize\"\n            min={1}\n            max={10}\n            type=\"number\"\n            id=\"frameSize\"\n            value={frameSize}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"step\">Please enter step: </label>\n          <input\n            className=\"input\"\n            name=\"step\"\n            min={1}\n            max={10}\n            type=\"number\"\n            id=\"step\"\n            value={step}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"animationDuration\">\n            Please enter animationDuration:\n            {' '}\n          </label>\n          <input\n            className=\"input\"\n            name=\"animationDuration\"\n            type=\"number\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handle}\n          />\n          <br />\n          <label htmlFor=\"animationDuration\">Infinite: </label>\n          <input\n            className=\"input\"\n            name=\"infinite\"\n            type=\"checkbox\"\n            id=\"infinite\"\n            onChange={this.handle}\n          />\n\n          <Carousel\n            images={images}\n            itemWidth={itemWidth}\n            frameSize={frameSize}\n            step={step}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}